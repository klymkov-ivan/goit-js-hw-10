{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet userSelectedDate = null;\nlet countdownInterval = null;\n\nconst startBtn = document.querySelector('[data-start]');\nconst inputEl = document.querySelector('#datetime-picker');\n\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\nstartBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    const now = new Date();\n\n    if (userSelectedDate <= now) {\n      startBtn.disabled = true;\n      iziToast.show({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topCenter',\n        color: '#ED3500',\n      });\n    } else {\n      startBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr(inputEl, options);\n\nstartBtn.addEventListener('click', () => {\n  if (!userSelectedDate) return;\n\n  startBtn.disabled = true;\n  inputEl.disabled = true;\n\n  countdownInterval = setInterval(() => {\n    const now = new Date();\n    const diff = userSelectedDate - now;\n\n    if (diff <= 0) {\n      clearInterval(countdownInterval);\n      updateTimerUI({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n      return;\n    }\n\n    const timeLeft = convertMs(diff);\n    updateTimerUI(timeLeft);\n  }, 1000);\n});\n\nfunction updateTimerUI({ days, hours, minutes, seconds }) {\n  daysEl.textContent = days;\n  hoursEl.textContent = addLeadingZero(hours);\n  minutesEl.textContent = addLeadingZero(minutes);\n  secondsEl.textContent = addLeadingZero(seconds);\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["userSelectedDate","countdownInterval","startBtn","inputEl","daysEl","hoursEl","minutesEl","secondsEl","options","selectedDates","iziToast","flatpickr","diff","updateTimerUI","timeLeft","convertMs","days","hours","minutes","seconds","addLeadingZero","value","ms"],"mappings":"6vBAKA,IAAIA,EAAmB,KACnBC,EAAoB,KAExB,MAAMC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAU,SAAS,cAAc,kBAAkB,EAEnDC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzDL,EAAS,SAAW,GAEpB,MAAMM,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBT,EAAmBS,EAAc,CAAC,EAG9BT,GAFQ,IAAI,MAGdE,EAAS,SAAW,GACpBQ,EAAS,KAAK,CACZ,MAAO,QACP,QAAS,qCACT,SAAU,YACV,MAAO,SACf,CAAO,GAEDR,EAAS,SAAW,EAEvB,CACH,EAEAS,EAAUR,EAASK,CAAO,EAE1BN,EAAS,iBAAiB,QAAS,IAAM,CAClCF,IAELE,EAAS,SAAW,GACpBC,EAAQ,SAAW,GAEnBF,EAAoB,YAAY,IAAM,CAEpC,MAAMW,EAAOZ,EADD,IAAI,KAGhB,GAAIY,GAAQ,EAAG,CACb,cAAcX,CAAiB,EAC/BY,EAAc,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EAC3D,MACD,CAED,MAAMC,EAAWC,EAAUH,CAAI,EAC/BC,EAAcC,CAAQ,CACvB,EAAE,GAAI,EACT,CAAC,EAED,SAASD,EAAc,CAAE,KAAAG,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACxDf,EAAO,YAAcY,EACrBX,EAAQ,YAAce,EAAeH,CAAK,EAC1CX,EAAU,YAAcc,EAAeF,CAAO,EAC9CX,EAAU,YAAca,EAAeD,CAAO,CAChD,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASN,EAAUO,EAAI,CAMrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAC1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EACpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EACjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}